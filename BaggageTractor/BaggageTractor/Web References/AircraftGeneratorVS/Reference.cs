//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace BaggageTractor.AircraftGeneratorVS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AircraftGeneratorSoap", Namespace="DKO-Ariport-Aircraft-Generator")]
    public partial class AircraftGenerator : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateNewPlaneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPlanesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnloadBaggageOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadBaggageOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPassengersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnloadPassengersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FollowMeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoStepOperationCompleted;
        
        private System.Threading.SendOrPostCallback FollowMeCompleteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AircraftGenerator() {
            this.Url = global::BaggageTractor.Properties.Settings.Default.BaggageTractor_AircraftGeneratorVS_AircraftGenerator;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateNewPlaneCompletedEventHandler CreateNewPlaneCompleted;
        
        /// <remarks/>
        public event GetAllPlanesCompletedEventHandler GetAllPlanesCompleted;
        
        /// <remarks/>
        public event UnloadBaggageCompletedEventHandler UnloadBaggageCompleted;
        
        /// <remarks/>
        public event LoadBaggageCompletedEventHandler LoadBaggageCompleted;
        
        /// <remarks/>
        public event LoadPassengersCompletedEventHandler LoadPassengersCompleted;
        
        /// <remarks/>
        public event UnloadPassengersCompletedEventHandler UnloadPassengersCompleted;
        
        /// <remarks/>
        public event FollowMeCompletedEventHandler FollowMeCompleted;
        
        /// <remarks/>
        public event DoStepCompletedEventHandler DoStepCompleted;
        
        /// <remarks/>
        public event FollowMeCompleteCompletedEventHandler FollowMeCompleteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DKO-Ariport-Aircraft-Generator/CreateNewPlane", RequestNamespace="DKO-Ariport-Aircraft-Generator", ResponseNamespace="DKO-Ariport-Aircraft-Generator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateNewPlane(string name, PlaneType type, int fuelNeed, int maxStandartPassengers, int maxVipPassengers, bool hasArrivalPassengers) {
            object[] results = this.Invoke("CreateNewPlane", new object[] {
                        name,
                        type,
                        fuelNeed,
                        maxStandartPassengers,
                        maxVipPassengers,
                        hasArrivalPassengers});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewPlaneAsync(string name, PlaneType type, int fuelNeed, int maxStandartPassengers, int maxVipPassengers, bool hasArrivalPassengers) {
            this.CreateNewPlaneAsync(name, type, fuelNeed, maxStandartPassengers, maxVipPassengers, hasArrivalPassengers, null);
        }
        
        /// <remarks/>
        public void CreateNewPlaneAsync(string name, PlaneType type, int fuelNeed, int maxStandartPassengers, int maxVipPassengers, bool hasArrivalPassengers, object userState) {
            if ((this.CreateNewPlaneOperationCompleted == null)) {
                this.CreateNewPlaneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewPlaneOperationCompleted);
            }
            this.InvokeAsync("CreateNewPlane", new object[] {
                        name,
                        type,
                        fuelNeed,
                        maxStandartPassengers,
                        maxVipPassengers,
                        hasArrivalPassengers}, this.CreateNewPlaneOperationCompleted, userState);
        }
        
        private void OnCreateNewPlaneOperationCompleted(object arg) {
            if ((this.CreateNewPlaneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewPlaneCompleted(this, new CreateNewPlaneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DKO-Ariport-Aircraft-Generator/GetAllPlanes", RequestNamespace="DKO-Ariport-Aircraft-Generator", ResponseNamespace="DKO-Ariport-Aircraft-Generator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Plane[] GetAllPlanes() {
            object[] results = this.Invoke("GetAllPlanes", new object[0]);
            return ((Plane[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPlanesAsync() {
            this.GetAllPlanesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllPlanesAsync(object userState) {
            if ((this.GetAllPlanesOperationCompleted == null)) {
                this.GetAllPlanesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPlanesOperationCompleted);
            }
            this.InvokeAsync("GetAllPlanes", new object[0], this.GetAllPlanesOperationCompleted, userState);
        }
        
        private void OnGetAllPlanesOperationCompleted(object arg) {
            if ((this.GetAllPlanesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPlanesCompleted(this, new GetAllPlanesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DKO-Ariport-Aircraft-Generator/UnloadBaggage", RequestNamespace="DKO-Ariport-Aircraft-Generator", ResponseNamespace="DKO-Ariport-Aircraft-Generator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnloadBaggage(MapObject serviceZone, int weightOfBaggage) {
            object[] results = this.Invoke("UnloadBaggage", new object[] {
                        serviceZone,
                        weightOfBaggage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnloadBaggageAsync(MapObject serviceZone, int weightOfBaggage) {
            this.UnloadBaggageAsync(serviceZone, weightOfBaggage, null);
        }
        
        /// <remarks/>
        public void UnloadBaggageAsync(MapObject serviceZone, int weightOfBaggage, object userState) {
            if ((this.UnloadBaggageOperationCompleted == null)) {
                this.UnloadBaggageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnloadBaggageOperationCompleted);
            }
            this.InvokeAsync("UnloadBaggage", new object[] {
                        serviceZone,
                        weightOfBaggage}, this.UnloadBaggageOperationCompleted, userState);
        }
        
        private void OnUnloadBaggageOperationCompleted(object arg) {
            if ((this.UnloadBaggageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnloadBaggageCompleted(this, new UnloadBaggageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DKO-Ariport-Aircraft-Generator/LoadBaggage", RequestNamespace="DKO-Ariport-Aircraft-Generator", ResponseNamespace="DKO-Ariport-Aircraft-Generator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoadBaggage(MapObject serviceZone, int weightOfBaggage) {
            object[] results = this.Invoke("LoadBaggage", new object[] {
                        serviceZone,
                        weightOfBaggage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoadBaggageAsync(MapObject serviceZone, int weightOfBaggage) {
            this.LoadBaggageAsync(serviceZone, weightOfBaggage, null);
        }
        
        /// <remarks/>
        public void LoadBaggageAsync(MapObject serviceZone, int weightOfBaggage, object userState) {
            if ((this.LoadBaggageOperationCompleted == null)) {
                this.LoadBaggageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadBaggageOperationCompleted);
            }
            this.InvokeAsync("LoadBaggage", new object[] {
                        serviceZone,
                        weightOfBaggage}, this.LoadBaggageOperationCompleted, userState);
        }
        
        private void OnLoadBaggageOperationCompleted(object arg) {
            if ((this.LoadBaggageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadBaggageCompleted(this, new LoadBaggageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DKO-Ariport-Aircraft-Generator/LoadPassengers", RequestNamespace="DKO-Ariport-Aircraft-Generator", ResponseNamespace="DKO-Ariport-Aircraft-Generator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoadPassengers(MapObject serviceZone, System.Guid[] passengers) {
            object[] results = this.Invoke("LoadPassengers", new object[] {
                        serviceZone,
                        passengers});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPassengersAsync(MapObject serviceZone, System.Guid[] passengers) {
            this.LoadPassengersAsync(serviceZone, passengers, null);
        }
        
        /// <remarks/>
        public void LoadPassengersAsync(MapObject serviceZone, System.Guid[] passengers, object userState) {
            if ((this.LoadPassengersOperationCompleted == null)) {
                this.LoadPassengersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPassengersOperationCompleted);
            }
            this.InvokeAsync("LoadPassengers", new object[] {
                        serviceZone,
                        passengers}, this.LoadPassengersOperationCompleted, userState);
        }
        
        private void OnLoadPassengersOperationCompleted(object arg) {
            if ((this.LoadPassengersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPassengersCompleted(this, new LoadPassengersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DKO-Ariport-Aircraft-Generator/UnloadPassengers", RequestNamespace="DKO-Ariport-Aircraft-Generator", ResponseNamespace="DKO-Ariport-Aircraft-Generator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnloadPassengers(MapObject serviceZone, int countOfPassengers) {
            object[] results = this.Invoke("UnloadPassengers", new object[] {
                        serviceZone,
                        countOfPassengers});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnloadPassengersAsync(MapObject serviceZone, int countOfPassengers) {
            this.UnloadPassengersAsync(serviceZone, countOfPassengers, null);
        }
        
        /// <remarks/>
        public void UnloadPassengersAsync(MapObject serviceZone, int countOfPassengers, object userState) {
            if ((this.UnloadPassengersOperationCompleted == null)) {
                this.UnloadPassengersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnloadPassengersOperationCompleted);
            }
            this.InvokeAsync("UnloadPassengers", new object[] {
                        serviceZone,
                        countOfPassengers}, this.UnloadPassengersOperationCompleted, userState);
        }
        
        private void OnUnloadPassengersOperationCompleted(object arg) {
            if ((this.UnloadPassengersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnloadPassengersCompleted(this, new UnloadPassengersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DKO-Ariport-Aircraft-Generator/FollowMe", RequestNamespace="DKO-Ariport-Aircraft-Generator", ResponseNamespace="DKO-Ariport-Aircraft-Generator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FollowMe(System.Guid planeId) {
            object[] results = this.Invoke("FollowMe", new object[] {
                        planeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FollowMeAsync(System.Guid planeId) {
            this.FollowMeAsync(planeId, null);
        }
        
        /// <remarks/>
        public void FollowMeAsync(System.Guid planeId, object userState) {
            if ((this.FollowMeOperationCompleted == null)) {
                this.FollowMeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFollowMeOperationCompleted);
            }
            this.InvokeAsync("FollowMe", new object[] {
                        planeId}, this.FollowMeOperationCompleted, userState);
        }
        
        private void OnFollowMeOperationCompleted(object arg) {
            if ((this.FollowMeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FollowMeCompleted(this, new FollowMeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DKO-Ariport-Aircraft-Generator/DoStep", RequestNamespace="DKO-Ariport-Aircraft-Generator", ResponseNamespace="DKO-Ariport-Aircraft-Generator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoStep(System.Guid planeId, CoordinateTuple step) {
            object[] results = this.Invoke("DoStep", new object[] {
                        planeId,
                        step});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DoStepAsync(System.Guid planeId, CoordinateTuple step) {
            this.DoStepAsync(planeId, step, null);
        }
        
        /// <remarks/>
        public void DoStepAsync(System.Guid planeId, CoordinateTuple step, object userState) {
            if ((this.DoStepOperationCompleted == null)) {
                this.DoStepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoStepOperationCompleted);
            }
            this.InvokeAsync("DoStep", new object[] {
                        planeId,
                        step}, this.DoStepOperationCompleted, userState);
        }
        
        private void OnDoStepOperationCompleted(object arg) {
            if ((this.DoStepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoStepCompleted(this, new DoStepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DKO-Ariport-Aircraft-Generator/FollowMeComplete", RequestNamespace="DKO-Ariport-Aircraft-Generator", ResponseNamespace="DKO-Ariport-Aircraft-Generator", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FollowMeComplete(System.Guid planeId) {
            object[] results = this.Invoke("FollowMeComplete", new object[] {
                        planeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FollowMeCompleteAsync(System.Guid planeId) {
            this.FollowMeCompleteAsync(planeId, null);
        }
        
        /// <remarks/>
        public void FollowMeCompleteAsync(System.Guid planeId, object userState) {
            if ((this.FollowMeCompleteOperationCompleted == null)) {
                this.FollowMeCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFollowMeCompleteOperationCompleted);
            }
            this.InvokeAsync("FollowMeComplete", new object[] {
                        planeId}, this.FollowMeCompleteOperationCompleted, userState);
        }
        
        private void OnFollowMeCompleteOperationCompleted(object arg) {
            if ((this.FollowMeCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FollowMeCompleteCompleted(this, new FollowMeCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="DKO-Ariport-Aircraft-Generator")]
    public enum PlaneType {
        
        /// <remarks/>
        Airbus,
        
        /// <remarks/>
        Jet,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="DKO-Ariport-Aircraft-Generator")]
    public partial class Plane {
        
        private System.Guid idField;
        
        private string nameField;
        
        private Flight flightField;
        
        private PlaneState stateField;
        
        private PlaneType typeField;
        
        private int fuelNeedField;
        
        private int maxStandartPassengersField;
        
        private int maxVipPassengersField;
        
        private bool hasArrivalPassengersField;
        
        private MapObject serviceZoneField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public Flight Flight {
            get {
                return this.flightField;
            }
            set {
                this.flightField = value;
            }
        }
        
        /// <remarks/>
        public PlaneState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public PlaneType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int FuelNeed {
            get {
                return this.fuelNeedField;
            }
            set {
                this.fuelNeedField = value;
            }
        }
        
        /// <remarks/>
        public int MaxStandartPassengers {
            get {
                return this.maxStandartPassengersField;
            }
            set {
                this.maxStandartPassengersField = value;
            }
        }
        
        /// <remarks/>
        public int MaxVipPassengers {
            get {
                return this.maxVipPassengersField;
            }
            set {
                this.maxVipPassengersField = value;
            }
        }
        
        /// <remarks/>
        public bool HasArrivalPassengers {
            get {
                return this.hasArrivalPassengersField;
            }
            set {
                this.hasArrivalPassengersField = value;
            }
        }
        
        /// <remarks/>
        public MapObject ServiceZone {
            get {
                return this.serviceZoneField;
            }
            set {
                this.serviceZoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="DKO-Ariport-Aircraft-Generator")]
    public partial class Flight {
        
        private int flightNumberField;
        
        private City cityField;
        
        private System.DateTime arrivalTimeField;
        
        private System.DateTime departureTimeField;
        
        /// <remarks/>
        public int FlightNumber {
            get {
                return this.flightNumberField;
            }
            set {
                this.flightNumberField = value;
            }
        }
        
        /// <remarks/>
        public City City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ArrivalTime {
            get {
                return this.arrivalTimeField;
            }
            set {
                this.arrivalTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DepartureTime {
            get {
                return this.departureTimeField;
            }
            set {
                this.departureTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="DKO-Ariport-Aircraft-Generator")]
    public enum City {
        
        /// <remarks/>
        Tokyo,
        
        /// <remarks/>
        Paris,
        
        /// <remarks/>
        Rome,
        
        /// <remarks/>
        NewYork,
        
        /// <remarks/>
        Sydney,
        
        /// <remarks/>
        Brasilia,
        
        /// <remarks/>
        Antananarivo,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Airport")]
    public partial class CoordinateTuple {
        
        private int xField;
        
        private int yField;
        
        /// <remarks/>
        public int X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public int Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Airport")]
    public partial class MapObject {
        
        private MapObjectType mapObjectTypeField;
        
        private int numberField;
        
        /// <remarks/>
        public MapObjectType MapObjectType {
            get {
                return this.mapObjectTypeField;
            }
            set {
                this.mapObjectTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Airport")]
    public enum MapObjectType {
        
        /// <remarks/>
        Runway,
        
        /// <remarks/>
        Garage,
        
        /// <remarks/>
        ServiceArea,
        
        /// <remarks/>
        Airport,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="DKO-Ariport-Aircraft-Generator")]
    public enum PlaneState {
        
        /// <remarks/>
        Arrival,
        
        /// <remarks/>
        Landing,
        
        /// <remarks/>
        TaxingToServiceArea,
        
        /// <remarks/>
        OnService,
        
        /// <remarks/>
        TaxingToRunway,
        
        /// <remarks/>
        Departed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateNewPlaneCompletedEventHandler(object sender, CreateNewPlaneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewPlaneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewPlaneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllPlanesCompletedEventHandler(object sender, GetAllPlanesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPlanesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPlanesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Plane[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Plane[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UnloadBaggageCompletedEventHandler(object sender, UnloadBaggageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnloadBaggageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnloadBaggageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LoadBaggageCompletedEventHandler(object sender, LoadBaggageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadBaggageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadBaggageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LoadPassengersCompletedEventHandler(object sender, LoadPassengersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPassengersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPassengersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UnloadPassengersCompletedEventHandler(object sender, UnloadPassengersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnloadPassengersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnloadPassengersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void FollowMeCompletedEventHandler(object sender, FollowMeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FollowMeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FollowMeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DoStepCompletedEventHandler(object sender, DoStepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoStepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoStepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void FollowMeCompleteCompletedEventHandler(object sender, FollowMeCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FollowMeCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FollowMeCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591